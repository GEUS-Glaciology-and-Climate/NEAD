#+TITLE: NEAD - New Environmental Archive Data - format specification


* Table of contents                               :toc_3:noexport:
- [[#introduction][Introduction]]
- [[#warning][WARNING]]
- [[#citation][Citation]]
- [[#file-format-ebnf-syntax][File format: EBNF syntax]]
- [[#interfaces][Interfaces]]
- [[#sample-nead-file][Sample NEAD file]]

* Introduction

This document describes the NEAD (New Environmental Archive Data) file format.

The NEAD format is a delimiter separated value (DSV) format similar to CSV, but with a header section, followed by the data section ([[./summit.csv][example]]). This document describes the format using [[https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form][Extended Bakus-Naur form (EBNF)]] syntax (below) or graphically at https://raw.githubusercontent.com/GEUS-PROMICE/NEAD/main/NEAD.svg 

Note - Here we use the EBNF notation from the [[https://www.w3.org/TR/2010/REC-xquery-20101214/#EBNFNotation][W3C Extensible Markup Language (XML)]], not the [[https://www.iso.org/standard/26153.html][ISO/IEC 14977:1996]] EBNF standard. The W3C XML standard is implemented and parsed by the Railroad Diagram Generator (https://github.com/GuntherRademacher/rr) that is used to make the graphics shown in this document.

# java -jar ~/local/rr/rr.war -suppressebnf ./NEAD.ebnf > NEAD.svg

* WARNING

+ This file format is under development.

* Citation

Iosifescu Enescu, I., Bavay, M., Plattner, G.-K. (2020). Sharing and reusing meteorological data. WMO Data Conference 2020 - Earth System Data Exchange in the 21st Century (Virtual Conference).

* File format: EBNF syntax

Click on the example graphic below to see the full graphical representation of the EBNF.

[[https://raw.githubusercontent.com/GEUS-PROMICE/NEAD/main/NEAD.svg][file:./example.png]]

The [[https://raw.githubusercontent.com/GEUS-PROMICE/NEAD/main/NEAD.svg][graphical EBNF form]] is generated from the following EBNF syntax (from https://www.w3.org/TR/xml/#sec-notation):

#+BEGIN_SRC example :tangle NEAD.ebnf :exports code
NEAD                  ::= firstline header_section data_section
firstline             ::= '#' ' ' 'NEAD' ' ' version_number ' ' file_format newline
header_section        ::= metadata_header metadata_section fields_header fields_section

/* metadata */
metadata_header       ::= '#' ' ' '[METADATA]' newline
metadata_section      ::= (('#' ((whitespace (required_metadata |
                                              recommended_metadata |
                                              other_metadata))? )? lineend ) | newline)+
required_metadata     ::= ('field_delimiter' assignment field_delimiter) |
                          ('geometry' assignment geometry) |
                          ('srid' assignment EPSG_code)
recommended_metadata  ::= ('station_id' assignment alphanumeric)
recommended_metadata  ::= ('timestamp_meaning' assignment timestamp_meanings)
recommended_metadata  ::= ('nodata' | 'timezone' ) assignment (integer | float)
recommended_metadata  ::= ('doi' | 'reference') assignment value
other_metadata        ::= key assignment value

/* fields */
fields_header         ::= '#' ' ' '[FIELDS]' newline
fields_section        ::= (('#' ((whitespace ( required_fields |
                                               recommended_fields |
                                               other_fields ))? )? lineend ) | newline)+
required_fields       ::= ('fields' assignment values)
recommended_fields    ::= ('scale_factor' |
                           'add_offset' |
                           'units' |
                           'long_name' |
                           'standard_name') assignment values
recommended_fields    ::= 'timestamp_meaning' assignment timestamp_meanings
other_fields          ::= key assignment values

/* data */
data_section          ::= '#' ' ' '[DATA]' newline dataline+
dataline              ::= (value ( field_delimiter value )* newline)
values                ::= value ( field_delimiter value )*

/*
  NOTE:
  All values must be the same length.
  This means everything in the "[FIELDS]" section maps 1:1 to the columns in the "[DATA]" section.
*/


/* other */
key             ::= char (alphanumeric*)?
value           ::= unicode-char*
assignment      ::= whitespace? '=' whitespace?
field_delimiter ::= [,|\/:;]
version_number  ::= digit* ('.' (alphanumeric)+)? ('.' (alphanumeric)+)?
file_format     ::= 'UTF-8' | 'ASCII'
EPSG_code       ::= 'EPSG' ':' digit digit digit digit
geometry        ::= 'POINT(' float float ')' |
                    'POINTZ(' float float float ')' |
                    WKT_string |
                    column_name
timestamp_meanings ::= 'beginning' | 'end' | 'middle' | 'instantaneous' | 'other' | 'undefined'

/* generic */
whitespace      ::= (tab | space)+
comment         ::= '#' whitespace? (unicode-char)?
lineend         ::= (whitespace | comment)? newline
newline         ::= #x0A
tab             ::= #x9
space           ::= #x20
char            ::= [a-zA-Z]
digit           ::= [0-9]
integer         ::= [+-]? digit+
alphanumeric    ::= (digit | char)+
hex             ::= (digit | [a-fA-F])+
float           ::= integer '.' ((digit)+)?

/* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */
unicode-char    ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]
#+END_SRC

#+BEGIN_SRC bash :exports none
java -jar ~/local/rr/rr.war -suppressebnf ./NEAD.ebnf > NEAD.svg
# firefox ./NEAD.svg
#+END_SRC

#+RESULTS:


* Interfaces

+ pyNEAD: http://github.com/GEUS-PROMICE/pyNEAD

* Sample NEAD file

+ [[./summit.csv][Example file]]

#+BEGIN_SRC bash :results verbatim :exports results
cat summit.csv
#+END_SRC

#+RESULTS:
#+begin_example
# NEAD 1.0 UTF-8
# [METADATA]
# station_id = 803027F4
# station_name = GC-NET GOES station Summit Station
# srid = EPSG:4326
# geometry = POINTZ (38.5053 72.5794 3199)
# nodata = -999
# timezone = 0
# field_delimiter = ,
# [FIELDS]
# fields = timestamp,ISWR,OSWR,NSWR,TA1,TA2,RH1,RH2,VW1,VW2,DW1,DW2,P,HS1,HS2,V
# add_value = 0,0,0,0,273.15,273.15,0,0,0,0,0,0,0,0,0,0
# scale_factor = 1,1,1,1,1,1,0.01,0.01,1,1,1,1,100,1,1,1
# display_units = time,W/m2,W/m2,W/m2,째C,째C,%,%,m/s,m/s,째,째,mbar,m,m,V
# display_description = timestamp_iso,short_wave_incoming_radiation,short_wave_outgoing_radiation,net_radiation,air_temperature_1,air_temperature_2,relative_humidity_1,relative_humidity_2,wind_speed_1,wind_speed_2,wind_direction_1,wind_direction_2,atmospheric_pressure,snow_height_1,snow_height_2,battery_voltage
# database_fields = timestamp_iso,swin,swout,netrad,airtemp1,airtemp2,rh1,rh2,windspeed1,windspeed2,winddir1,winddir2,pressure,sh1,sh2,battvolt
# database_fields_data_types = timestamp,real,real,real,real,real,real,real,real,real,real,real,real,real,real,real
# 
# [DATA]
# 
1996-05-12 11:00:00+00,356.6,288.29,-999,-999,-999,96.05,94.79,3.84,4.2,186.5,-999,691.7,-999,0.05,4.59
1996-05-12 12:00:00+00,489.3,453,-999,-999,-999,95.55,94.04,4.11,4.5,205.5,-999,691.8,-999,0.01,1.05
1996-05-12 13:00:00+00,622,506.87,-15.43,-999,-999,91.01,90.89,3.39,3.58,165.3,-999,692,-999,0,0
1996-05-12 14:00:00+00,684.2,569.11,15.51,-999,-999,87.46,88.67,5.36,5.61,217.6,-999,692.2,-0.01,-0.01,12.69
1996-05-12 15:00:00+00,680.6,572.57,-90.87,-999,-999,86.25,87.5,6.82,7.13,222.3,-999,692.6,-0.01,-0.01,12.73
1996-05-12 16:00:00+00,674.6,569.3,-137.32,-999,-999,87.05,87.38,5.51,5.77,219.6,-999,692.6,0,0,12.78
1996-05-12 17:00:00+00,620.2,528.53,-157.64,-999,-999,88.73,89.67,5.78,6.06,220.9,-999,692.8,0,0.01,12.69
1996-05-12 18:00:00+00,507.6,435.89,-117.4,-999,-999,90.03,91.31,5.84,6.12,221.3,-999,693.1,0,0.01,12.64
1996-05-12 19:00:00+00,406.8,350.35,-61.34,-999,-999,91.13,92.28,5.83,6.1,229.2,-999,692.9,0,0.01,12.61
1996-05-12 20:00:00+00,366.8,319.41,-77.03,-999,-999,91.24,92.4,7.06,7.37,240.2,-999,693,0,0,12.54
1996-05-12 21:00:00+00,275.8,241.88,-92.72,-999,-999,92.66,93.76,4.87,5.16,237.9,-999,693,0,0,12.44
#+end_example

 
